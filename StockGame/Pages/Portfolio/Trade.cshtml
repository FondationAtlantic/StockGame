@page
@model StockGame.Pages.Portfolio.TradeModel

@{
    ViewData["Title"] = "Portefeuille";
}

<h2>Portefeuille</h2>
<hr />

<h3><span asp-validation-for="TransactionEntry.Amount" class="text-danger"></span></h3>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Portfolio.Items[0].Equity.ThumbPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Portfolio.Items[0].Equity.Name)
            </th>
            <th class="text-right">
                @Html.DisplayNameFor(model => model.Portfolio.Items[0].Amount)
            </th>
            <th class="text-right">
                @Html.DisplayNameFor(model => model.Portfolio.Items[0].Price)
            </th>
            <th class="text-right">
                @Html.DisplayNameFor(model => model.Portfolio.Items[0].Value)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Portfolio.Items) {
            @if(item.Amount <= 0) { continue; }
            <tr>
                <td>
                    <img src="@Url.Content(item.Equity.ThumbPath)" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Equity.Name)
                </td>
                <td class="text-right">
                    @if(item.Amount > 0) { @Html.DisplayFor(modelItem => item.Amount); }
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td class="text-right">
                    @if(item.Value > 0f) { @Html.DisplayFor(modelItem => item.Value) }
                </td>
            </tr>
        }
        <tr class="success">
            <td>
                @Html.DisplayNameFor(model => model.Portfolio.Cash)
            </td>
            <td></td>
            <td></td>
            <td></td>
            <td class="text-right">
                @Html.DisplayFor(model => model.Portfolio.Cash)
            </td>
        </tr>
        <tr style="border-bottom: 1px solid;border-bottom-color: lightgray;">
            <td>
                @Html.DisplayNameFor(model => model.Portfolio.TotalValue)
            </td>
            <td></td>
            <td></td>
            <td></td>
            <td class="text-right">
                @Html.DisplayFor(model => model.Portfolio.TotalValue)
            </td>
        </tr>
    </tbody>
</table>

<br />
<h4>Transaction</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form method="post" onsubmit="return validate(this);">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="TransactionEntry.Equity.Name" class="control-label"></label>
                <select asp-for="TransactionEntry.EquityId" class="form-control" asp-items="ViewBag.EquityId"></select>
            </div>
            <div class="form-group">
                <label asp-for="TransactionEntry.Type" class="control-label"></label>
                <select asp-for="TransactionEntry.Type" class="form-control" asp-items="Html.GetEnumSelectList<StockGame.Models.ViewModels.TransactionEntry.TradeType>()"></select>
            </div>
            <div class="form-group">
                <label asp-for="TransactionEntry.Amount" class="control-label"></label>
                <input asp-for="TransactionEntry.Amount" class="form-control" />
                <span asp-validation-for="TransactionEntry.Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TransactionEntry.Reason" class="control-label"></label>
                <select asp-for="TransactionEntry.TransactionReasonId" class="form-control" asp-items="ViewBag.TransactionReasonId"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Confirmer" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>

        var tradeableEquities = @Html.Raw(Json.Serialize(Model.TradeableEquities));

        function validate(form) {
            var amount = $('#TransactionEntry_Amount')[0].value;
            if (isNaN(amount) || amount.length == 0) 
            { 
                return true; 
            }
            var dropList = $('#TransactionEntry_EquityId')[0];
            var idx = dropList.selectedIndex;
            var side = $('#TransactionEntry_Type')[0].selectedIndex == 0 ? "Acheter" : "Vendre";
            var price = tradeableEquities[idx].price;
            var name = tradeableEquities[idx].name;
            var totalValue = price * amount;
            var strValue = Number(totalValue).toLocaleString ('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 2, maximumFractionDigits: 2 });

            return confirm(side + ' ' + amount + ' ' + name + ' pour la somme totale de ' + strValue + "?" );
        }

    </script>
 
}
