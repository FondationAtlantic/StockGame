@page
@model StockGame.Pages.Games.RankingModel
@using Microsoft.AspNetCore.Html
@using StockGame.Pages.Games
@using StockGame.Models.ViewModels
@using StockGame.Services

@{
  ViewData["Title"] = "Classement";
}

<div class="wrapContent">
  <div class="title">
    <h2><i class="fal fa-list-ol" aria-hidden="true"></i>Classement</h2>
    <ul class="nav nav-tabs d">
      <li class="active"><a data-toggle="tab" href="#rankings">Tableau</a></li>
      <li><a data-toggle="tab" href="#charts">Graphique</a></li>
    </ul>
  </div>
  <div class="tab-content">
    <div id="rankings" class="tab-pane fade in active">
      <div class="filters">
        <h3>Partie <strong>@Model.Game.Name</strong></h3>
        <ul class="nav nav-tabs m">
          <li class="active"><a data-toggle="tab" href="#rankings">Tableau</a></li>
          <li><a data-toggle="tab" href="#charts">Graphique</a></li>
        </ul>
        <div class="orderBy d">
          <label>Classer par</label>
          <div class="fakeSelect">
            <div class="currentValue">
              <ul>
                <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.PctGain)">
                  <a asp-page="./Ranking" asp-route-sortCategory="PctGain">@RankingModel.SortCategoryEnum.PctGain.GetDisplayName()</a>
                </li>
                <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.Gain)">
                  <a asp-page="./Ranking" asp-route-sortCategory="Gain">@RankingModel.SortCategoryEnum.Gain.GetDisplayName()</a>
                </li>
                <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.TotalPctGain)">
                  <a asp-page="./Ranking" asp-route-sortCategory="TotalPctGain">@RankingModel.SortCategoryEnum.TotalPctGain.GetDisplayName()</a>
                </li>
                <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.TotalValue)">
                  <a asp-page="./Ranking" asp-route-sortCategory="TotalValue">@RankingModel.SortCategoryEnum.TotalValue.GetDisplayName()</a>
                </li>
              </ul>
              <i class="far fa-angle-down"></i>
            </div>
            <div class="values">
              <ul>
                <li>
                  <a asp-page="./Ranking" asp-route-sortCategory="PctGain">@RankingModel.SortCategoryEnum.PctGain.GetDisplayName()</a>
                </li>
                <li>
                  <a asp-page="./Ranking" asp-route-sortCategory="Gain">@RankingModel.SortCategoryEnum.Gain.GetDisplayName()</a>
                </li>
                <li>
                  <a asp-page="./Ranking" asp-route-sortCategory="TotalPctGain">@RankingModel.SortCategoryEnum.TotalPctGain.GetDisplayName()</a>
                </li>
                <li>
                  <a asp-page="./Ranking" asp-route-sortCategory="TotalValue">@RankingModel.SortCategoryEnum.TotalValue.GetDisplayName()</a>
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      <div class="wrapRanking">
        <table class="table">
          <thead>
            <tr>
              <th></th>
              <th>
               
                <div class="orderBy m">
                  <label>Classer par</label>
                  <div class="fakeSelect">
                    <div class="currentValue">
                      <ul>
                        <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.PctGain)">
                          <a asp-page="./Ranking" asp-route-sortCategory="PctGain">@RankingModel.SortCategoryEnum.PctGain.GetDisplayName()</a>
                        </li>
                        <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.Gain)">
                          <a asp-page="./Ranking" asp-route-sortCategory="Gain">@RankingModel.SortCategoryEnum.Gain.GetDisplayName()</a>
                        </li>
                        <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.TotalPctGain)">
                          <a asp-page="./Ranking" asp-route-sortCategory="TotalPctGain">@RankingModel.SortCategoryEnum.TotalPctGain.GetDisplayName()</a>
                        </li>
                        <li class="@Model.IsCategoryActive(RankingModel.SortCategoryEnum.TotalValue)">
                          <a asp-page="./Ranking" asp-route-sortCategory="TotalValue">@RankingModel.SortCategoryEnum.TotalValue.GetDisplayName()</a>
                        </li>
                      </ul>
                      <i class="far fa-angle-down"></i>
                    </div>
                    <div class="values">
                      <ul>
                        <li>
                          <a asp-page="./Ranking" asp-route-sortCategory="PctGain">@RankingModel.SortCategoryEnum.PctGain.GetDisplayName()</a>
                        </li>
                        <li>
                          <a asp-page="./Ranking" asp-route-sortCategory="Gain">@RankingModel.SortCategoryEnum.Gain.GetDisplayName()</a>
                        </li>
                        <li>
                          <a asp-page="./Ranking" asp-route-sortCategory="TotalPctGain">@RankingModel.SortCategoryEnum.TotalPctGain.GetDisplayName()</a>
                        </li>
                        <li>
                          <a asp-page="./Ranking" asp-route-sortCategory="TotalValue">@RankingModel.SortCategoryEnum.TotalValue.GetDisplayName()</a>
                        </li>
                      </ul>
                    </div>
                  </div>
                </div>
                <div class="team-sorting">
                  @if(Model.CurrentSortDirection == "asc")
                  {
                    <span class="dropup"><span class="caret"></span></span>
                  } else {
                    <span class="caret"></span>
                  }
                  <a asp-page="./Ranking" asp-route-sortCategory="@RankingModel.SortCategoryEnum.Team" asp-route-sortDirection="@(Model.CurrentSortDirection == "desc" ? "asc" : "desc")">@RankingModel.SortCategoryEnum.Team.GetDisplayName()</a>
                </div>
              </th>
              <th align="right">
                @if(Model.CurrentSortDirection == "asc")
                {
                  <span class="dropup"><span class="caret"></span></span>
                } else {
                  <span class="caret"></span>
                }
                <a asp-page="./Ranking" asp-route-sortCategory="@Model.CurrentSortStat" asp-route-sortDirection="@(Model.CurrentSortDirection == "desc" ? "asc" : "desc")">@Model.CurrentSortStat.GetDisplayName()</a>
              </th>
              @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
              {
                <th></th>
              }
            </tr>
          </thead>
          <tbody>
            @foreach (var item in Model.PortfolioGameRankingItems)
            {
              <tr class=@(item.Team == Model.ActiveTeam ? "success" : "none")>
                <td valign="middle" class="position">
                  @Html.DisplayFor(model => item.Rank)
                </td>
                <td>
                  <span class="nameAndTotal">
                    <b>@Html.DisplayFor(model => item.Team.Name)</b>
                  </span>
                </td>
                <td align="right">
                  @{
                    IHtmlContent currentFormattedCatValue = null;
                    float? currentCatValue = Model.GetCurrentCategoryValue(item);

                    switch(Model.CurrentSortCategory)
                    {
                      case RankingModel.SortCategoryEnum.PctGain:
                        currentFormattedCatValue = Html.DisplayFor(m => item.PctGain);
                        break;
                      case RankingModel.SortCategoryEnum.TotalValue:
                        currentFormattedCatValue = Html.DisplayFor(m => item.TotalValue);
                        break;
                      case RankingModel.SortCategoryEnum.Gain:
                        currentFormattedCatValue = Html.DisplayFor(m => item.Gain);
                        break;
                      case RankingModel.SortCategoryEnum.TotalPctGain:
                        currentFormattedCatValue = Html.DisplayFor(m => item.TotalPctGain);
                        break;
                    }                    
                  }
                  <span class="@Model.GetTrendCSSClass(currentCatValue)">@currentFormattedCatValue</span>
                  
                  @* @switch (item.Trend)
                  {
                    case PortfolioGameRankingItem.ValueTrend.Up:
                      <strong class="trendUp"><i class="far fa-arrow-up"></i> @Html.DisplayFor(model => item.PctGain)&nbsp;|&nbsp;@Html.DisplayFor(model => item.Gain)</strong>
                      break;
                    case PortfolioGameRankingItem.ValueTrend.Down:
                      <strong class="trendDown"><i class="far fa-arrow-down"></i> @Html.DisplayFor(model => item.PctGain)&nbsp;|&nbsp;@Html.DisplayFor(model => item.Gain)</strong>
                      break;
                    default:
                      @Html.DisplayFor(model => item.PctGain) <text>&nbsp;|&nbsp;</text> @Html.DisplayFor(model => item.Gain)
                      break;
                  } *@
                </td>

                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                  <td>
                    @if (item.Team == Model.ActiveTeam)
                    {
                      <!--a asp-page="./Ranking" asp-route-SelectActiveTeamId="-1">Forget</!a-->
                    }
                    else
                    {
                      <a asp-page="./Ranking" asp-route-SelectActiveGameId="@Model.Game.Id" asp-route-SelectActiveTeamId="@item.Team.Id">Select</a>
                    }
                  </td>
                }
              </tr>
            }
          </tbody>
        </table>
      </div>
    </div>
    <div id="charts" class="tab-pane fade">
      <br />
         <div class="graph-transition" id="portfolio_chart_div"  style="height: 50rem;"></div>
    </div>
  </div>
</div>

@section Scripts {

  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

  <script>
    google.charts.load
    (
      'current',
      { 
        packages: ['corechart'],
        'language': 'fr-ca',
      }
    );

    var data = @Html.Raw(Json.Serialize(Model.PortfolioGameHistory));

    var portfolioChartData;
    var portfolioChart;
    var portfolioChartOptions;

    google.charts.setOnLoadCallback(LoadChartData);

    function LoadChartData() {
      LoadChart(data);
      return false;
    }

    function LoadChart(portfolioGameHistory) {
      portfolioChartData = new google.visualization.DataTable();
      portfolioChartData.addColumn('string', 'Episode'); // Implicit series 1 data col.
      portfolioChart = new google.visualization.LineChart(document.getElementById('portfolio_chart_div'));
      portfolioChartOptions = {
        animation: {
          startup: true,
          duration: 1000,
          easing: 'out'
        },
        chartArea: {
          width: '80%',
          height: '100%',
          bottom: '26%',
          top: '5%',
          left: '6%',
          right: '15%'
        },
        title: "Valeur des portefeuilles",
        hAxis: {
          slantedText: true,
          slantedTextAngle: 15
        },
        vAxis: {
          title: 'Valeur'
        },
      };

      var portfolioDataArray = [];

      //add episode names
      $.each(portfolioGameHistory.episodeNames, function (i, name) {
        portfolioDataArray.push([name]);
      });
      $.each(portfolioGameHistory.teamHistories, function (i, portfolioTeamHistory) {
        portfolioChartData.addColumn('number', portfolioTeamHistory.teamName); // Implicit domain label col.
        $.each(portfolioTeamHistory.items, function (j, item) {
          var row = portfolioDataArray[j];
          row.push(item.totalValue);
        });
      });

      portfolioChartData.addRows(portfolioDataArray);

      $("a[href='#charts']").on('shown.bs.tab', function (e) {
        ResizeCharts();
      });

      if (document.addEventListener) {
        window.addEventListener('resize', ResizeCharts);
      }
      else if (document.attachEvent) {
        window.attachEvent('onresize', ResizeCharts);
      }
      else {
        window.resize = ResizeCharts;
      }

      return false;
    }

    function ResizeCharts(data) {
      portfolioChart.draw(portfolioChartData, portfolioChartOptions);
    }

  </script>
}
