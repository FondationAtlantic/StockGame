@page
@model StockGame.Pages.Analysis.IndexModel

@{
  ViewData["Title"] = "Analyse";
}

<style type="text/css">
    .nowrap-right {
        text-align: right;
        white-space: nowrap;
    }

    .nowrap {
        white-space: nowrap;
    }

    .right {
        text-align: right;
    }

    .negative {
        color: red;
    }
</style>

<div class="myanalysis">
  <div class="analysisHero">
    <h1><i class="fal fa-chart-line" aria-hidden="true"></i>Analyse</h1>
    <div class="date"><i class="fal fa-calendar-alt"></i>Session <strong>@Model.ActiveTradingSession.Episode.Name</strong></div>
  </div>
  <div class="twoCols">
    <div class="left">
      <div class="wrapAnalysis">
        <table class="sector-table">
        @{var lastIndustry = "";}
        @foreach (var item in Model.IndexItems)
        {
          @if (item.EpisodeEquityInfo.Equity.Industry.Name != lastIndustry)
          {
            lastIndustry = item.EpisodeEquityInfo.Equity.Industry.Name;            
              <tr class="header">
                <th data-type="mix" colspan="2">
                  <h3>@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Equity.Industry.Name)</h3>
                </th>
                <th>@Html.DisplayNameFor(model => model.IndexItems[0].UserProfitLoss)</th>
                <th>Événements</th>
                <th>@Html.DisplayNameFor(model => model.IndexItems[0].LastKnownEarningsPerShare)</th>
                <th>@Html.DisplayNameFor(model => model.IndexItems[0].EpisodeEquityInfo.Price)</th>
                <th>@Html.DisplayNameFor(model => model.IndexItems[0].DividendYield)</th>
                @if (Model.ActiveGame.ShowPriceEarningsEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                  <th>
                    @Html.DisplayNameFor(model => model.IndexItems[0].PriceEarningsRatio)
                  </th>
                }
                @if (Model.ActiveGame.ShowLeverageEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                  <th>
                    @Html.DisplayNameFor(model => model.IndexItems[0].LeverageRatio)
                  </th>
                }
                <th></th>
              </tr>
              
              <tr>
                <td colspan="2" class="equity-branding">
                  <div>
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <img class="equity-logo" src="@Url.Content(item.EpisodeEquityInfo.Equity.ImgPath)" />
                    </a>
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <b>@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Equity.Name)</b>
                    </a>
                  </div>
                </td>

                <td data-th="@Html.DisplayNameFor(model => model.IndexItems[0].UserProfitLoss)">
                  <span class="@(item.UserProfitLoss < 0 ? "negative" : "")">@Html.DisplayFor(modelItem => item.UserProfitLoss)</span>
                </td>

                <td class="events-column" data-th="Événements">
                  @if (item.EpisodeEquityInfo.NewsTitle != null)
                  {
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <div><i class="fal fa-newspaper"></i><span>Communiqué de presse</span></div>
                    </a>
                  }
                  @if (item.EpisodeEquityInfo.AnnounceFinancialResults)
                  {
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <div><i class="fal fa-file-invoice-dollar"></i><span>Publication des résultats financiers</span></div>
                    </a>
                  }
                  @if (item.EpisodeEquityInfo.Dividend.HasValue && item.EpisodeEquityInfo.Dividend.Value != 0.0f)
                  {
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <div><i class="fal fa-hand-holding-usd"></i><span>Dividende imminent</span></div>
                    </a>
                  }
                  @if (item.EpisodeEquityInfo.NewsTitle == null && !item.EpisodeEquityInfo.AnnounceFinancialResults && !item.EpisodeEquityInfo.Dividend.HasValue)
                  {
                    <text>—</text>
                  }
                </td>

                <td data-th="Bénéfice par action">
                  <span class="@(item.LastKnownEarningsPerShare < 0.0f ? "negative" : "")">@Html.DisplayFor(modelItem => item.LastKnownEarningsPerShare)</span>
                </td>

                <td data-th="Prix" class="price-column">
                  @{string className = "";}
                  @if(item.PriceVariationRatio > 0)
                  {
                    className = "trendUp";
                  } else if(item.PriceVariationRatio < 0)
                  {
                    className = "trendDown";
                  }
                  <span>@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Price)</span>
                  <span>
                    (&nbsp;<strong @(className != "" ? $"class={className}" : "")>@Html.DisplayFor(modelItem => item.PriceVariationRatio)</strong>&nbsp;)
                  </span>
                </td>

                <td data-th="Rendement du dividende">
                  @if (item.DividendYield > 0)
                  {
                    @Html.DisplayFor(modelItem => item.DividendYield)
                  }
                  else
                  {
                    <text>—</text>
                  }
                </td>
                  
                @if (Model.ActiveGame.ShowPriceEarningsEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                <td data-th="Cours / Bénéfice">
                  @Html.DisplayFor(modelItem => item.PriceEarningsRatio)
                </td>
                }

                @if (Model.ActiveGame.ShowLeverageEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                <td data-th="Levier">
                  @Html.DisplayFor(modelItem => item.LeverageRatio)
                </td>
                }

                <td>
                   <a asp-page="../Portfolio/Trade" onclick="selectById(@item.EpisodeEquityInfo.EquityId)" class="btn small buySell"><i class="far fa-exchange"></i>Transiger</a>
                </td>
              </tr>
            
          }          
        }
        </table>
      </div>
    </div>

  </div>


</div>

@section Scripts {
  <script type="text/javascript">
    function selectById(id) {
      event.preventDefault();
      window.location.href = '/Portfolio/Trade' +
        '?showModal=1' +
        '&equity=' +
        id;
    }
  </script>
}