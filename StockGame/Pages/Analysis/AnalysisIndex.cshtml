@page
@model StockGame.Pages.Analysis.IndexModel

@{
  ViewData["Title"] = "Analyse";
}

<style type="text/css">
    .nowrap-right {
        text-align: right;
        white-space: nowrap;
    }

    .nowrap {
        white-space: nowrap;
    }

    .right {
        text-align: right;
    }

    .negative {
        color: red;
    }
</style>

<div class="myanalysis">
  <div class="analysisHero">
    <h1><i class="fal fa-chart-line" aria-hidden="true"></i>Analyse</h1>
    <div class="date"><i class="fal fa-calendar-alt"></i>Session <strong>@Model.ActiveTradingSession.Episode.Name</strong></div>
    <div class="img"></div>
  </div>
  <div class="twoCols">
    <div class="left">
      <div class="wrapAnalysis">
        <table class="sector-table">
        @{var lastIndustry = "";}
        @foreach (var item in Model.IndexItems)
        {
          @if (item.EpisodeEquityInfo.Equity.Industry.Name != lastIndustry)
          {
            lastIndustry = item.EpisodeEquityInfo.Equity.Industry.Name;            
              <tr class="header">
                <th data-type="mix" colspan="2">
                  <h3>@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Equity.Industry.Name)</h3>
                </th>
                <th>Événements</th>
                <th>@Html.DisplayNameFor(model => model.IndexItems[0].LastKnownEarningsPerShare)</th>
                <th>@Html.DisplayNameFor(model => model.IndexItems[0].EpisodeEquityInfo.Price)</th>
                <th>@Html.DisplayNameFor(model => model.IndexItems[0].DividendYield)</th>
                @if (Model.ActiveGame.ShowPriceEarningsEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                  <th>
                    @Html.DisplayNameFor(model => model.IndexItems[0].PriceEarningsRatio)
                  </th>
                }
                @if (Model.ActiveGame.ShowLeverageEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                  <th>
                    @Html.DisplayNameFor(model => model.IndexItems[0].LeverageRatio)
                  </th>
                }
                <th>Actions</th>
              </tr>
              
              <tr>
                <td colspan="2" class="equity-branding">
                  <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                    <img class="equity-logo" src="@Url.Content(item.EpisodeEquityInfo.Equity.ImgPath)" />
                  </a>
                  <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                    <b>@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Equity.Name)</b>
                  </a>
                </td>

                <td>
                  @if (item.EpisodeEquityInfo.NewsTitle != null)
                  {
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <div><i class="fal fa-newspaper"></i><span class="m">Communiqué de presse</span></div>
                    </a>
                  }
                  @if (item.EpisodeEquityInfo.AnnounceFinancialResults)
                  {
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <div><i class="fal fa-file-invoice-dollar"></i><span class="m">Publication des résultats financiers</span></div>
                    </a>
                  }
                  @if (item.EpisodeEquityInfo.Dividend.HasValue && item.EpisodeEquityInfo.Dividend.Value != 0.0f)
                  {
                    <a style="all: unset; cursor: pointer" asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id">
                      <div><i class="fal fa-hand-holding-usd"></i><span class="m">Dividende imminent</span></div>
                    </a>
                  }
                  @if (item.EpisodeEquityInfo.NewsTitle == null && !item.EpisodeEquityInfo.AnnounceFinancialResults && !item.EpisodeEquityInfo.Dividend.HasValue)
                  {
                    <text>—</text>
                  }
                </td>

                <td>
                  <span class="m">Bénéfice par action&nbsp;:&nbsp;</span><span class="@(item.LastKnownEarningsPerShare < 0.0f ? "negative" : "")">@Html.DisplayFor(modelItem => item.LastKnownEarningsPerShare)</span>
                </td>

                <td>
                  <span class="m">Prix&nbsp;:&nbsp;</span>
                  @switch (item.Trend)
                  {
                    case StockGame.Models.ViewModels.AnalysisIndexItem.PriceTrend.Up:
                      <strong class="trendUp"><i class="far fa-arrow-up"></i>@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Price)</strong>
                      break;
                    case StockGame.Models.ViewModels.AnalysisIndexItem.PriceTrend.Down:
                      <strong class="trendDown"><i class="far fa-arrow-down"></i>@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Price)</strong>
                      break;
                    case StockGame.Models.ViewModels.AnalysisIndexItem.PriceTrend.Unchanged:
                      <strong class="trendSame">@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Price)</strong>
                      break;
                  }
                </td>

                <td>
                  <span class="m">Rendement dividende&nbsp;:&nbsp;</span>
                  @if (item.DividendYield > 0)
                  {
                    @Html.DisplayFor(modelItem => item.DividendYield)
                  }
                  else
                  {
                    <text>—</text>
                  }
                </td>
                  
                @if (Model.ActiveGame.ShowPriceEarningsEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                <td>
                  @Html.DisplayFor(modelItem => item.PriceEarningsRatio)
                </td>
                }

                @if (Model.ActiveGame.ShowLeverageEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
                {
                <td>
                  @Html.DisplayFor(modelItem => item.LeverageRatio)
                </td>
                }

                <td>
                   <a asp-page="../Portfolio/Trade" onclick="selectById(@item.EpisodeEquityInfo.EquityId)" class="btn small buySell"><i class="far fa-exchange"></i>Transiger</a>
                </td>
              </tr>
            
          }          
        }
        </table>
      </div>
    </div>

  </div>


</div>





<table class="table" style="display: none">
  <thead>
    <tr>
      <th>
        @Html.DisplayNameFor(model => model.IndexItems[0].EpisodeEquityInfo.Equity.Industry)
      </th>
      <th>
        @Html.DisplayNameFor(model => model.IndexItems[0].EpisodeEquityInfo.Equity.Name)
      </th>
      <th>
        Événements
      </th>
      <th class="right">
        @Html.DisplayNameFor(model => model.IndexItems[0].LastKnownEarningsPerShare)
      </th>
      <th class="right">
        @Html.DisplayNameFor(model => model.IndexItems[0].EpisodeEquityInfo.Price)
      </th>
      <th class="right">
        @Html.DisplayNameFor(model => model.IndexItems[0].DividendYield)
      </th>
      @if (Model.ActiveGame.ShowPriceEarningsEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
      {
        <th class="right">
          @Html.DisplayNameFor(model => model.IndexItems[0].PriceEarningsRatio)
        </th>
      }
      @if (Model.ActiveGame.ShowLeverageEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
      {
        <th class="right">
          @Html.DisplayNameFor(model => model.IndexItems[0].LeverageRatio)
        </th>
      }
    </tr>
  </thead>
  <tbody>
    @*@{var lastIndustry2 = "";}*@
    @foreach (var item in Model.IndexItems)
    {
      @if (item.EpisodeEquityInfo.Equity.Industry.Name != lastIndustry)
      {
        lastIndustry = item.EpisodeEquityInfo.Equity.Industry.Name;
        <tr bgcolor="DarkGray" class="h4" style="color:White"> <td colspan="20">@Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Equity.Industry.Name)</td></tr>
      }
      <tr>
        <td>
          <a asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id"><img style="margin: 0px 8px" src="@Url.Content(item.EpisodeEquityInfo.Equity.ThumbPath)" /></a>
        </td>
        <td>
          <a asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id"> @Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Equity.Name)</a>
        </td>
        <td class="nowrap">
          @if (item.EpisodeEquityInfo.NewsTitle != null)
          {
            <a asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id"><img src="~/images/newspaper_small.png" title="Nouvelle!" /></a>
          }
          @if (item.EpisodeEquityInfo.AnnounceFinancialResults)
          {
            <a asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id"><img src="~/images/results_small.png" title="Publication des résultats" /></a>
          }
          @if (item.EpisodeEquityInfo.Dividend.HasValue && item.EpisodeEquityInfo.Dividend.Value != 0.0f)
          {
            <a asp-page="./Details" asp-route-id="@item.EpisodeEquityInfo.Id"><img src="~/images/dividend_small.png" title="Dividende imminent" /></a>
          }
        </td>
        <td class="nowrap-right">
          <span class="@(item.LastKnownEarningsPerShare < 0.0f ? "negative" : "")">@Html.DisplayFor(modelItem => item.LastKnownEarningsPerShare)</span>
        </td>
        <td class="nowrap-right">
          @Html.DisplayFor(modelItem => item.EpisodeEquityInfo.Price)
          @switch (item.Trend)
          {
            case StockGame.Models.ViewModels.AnalysisIndexItem.PriceTrend.Up:
              <img src="~/images/up_arrow.png" />
              break;
            case StockGame.Models.ViewModels.AnalysisIndexItem.PriceTrend.Down:
              <img src="~/images/down_arrow.png" />
              break;
          }
        </td>
        <td class="nowrap-right">
          @Html.DisplayFor(modelItem => item.DividendYield)
        </td>
        @if (Model.ActiveGame.ShowPriceEarningsEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
        {
          <td class="nowrap-right">
            @Html.DisplayFor(modelItem => item.PriceEarningsRatio)
          </td>
        }
        @if (Model.ActiveGame.ShowLeverageEpisodeRange.Contains(Model.ActiveTradingSession.Episode.EpisodeIndex) || User.IsInRole("Admin"))
        {
          <td class="nowrap-right">
            @Html.DisplayFor(modelItem => item.LeverageRatio)
          </td>
        }
      </tr>
    }
  </tbody>
</table>


@section Scripts {
  <script type="text/javascript">
    function selectById(id) {
      event.preventDefault();
      window.location.href = '/Portfolio/Trade' +
        '?showModal=1' +
        '&equity=' +
        id;
    }
  </script>
}